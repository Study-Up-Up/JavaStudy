<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--0.加载properties文件信息-->
    <context:property-placeholder location="classpath:Spring事务管理/db.properties"/>
    <!--1.配置数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--数据库驱动-->
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <!--连接数据库的URL-->
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <!--连接数据库的用户名-->
        <property name="user" value="${jdbc.user}"/>
        <!--连接数据库的密码-->
        <property name="password" value="${jdbc.password}"/>
        <!--将jdbcTemplate对象注入到userDao实现类中-->
    </bean>
    <!--2.配置JDBC模板-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <!--默认必须使用数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--3.配置Dao-->
    <bean id="accountDao" class="Spring事务管理.AccountDaoImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>
    <!--4.配置Service-->
    <bean id="accountService" class="Spring事务管理.AccountServiceImpl">
        <property name="accountDao" ref="accountDao"/>
    </bean>
    <!--#1事务管理器,依赖于数据源-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--#2生成代理类,让代理管理事务，依赖于事务管理器-->
    <bean id="accountServiceProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <!--#2.1提供事务管理器-->
        <property name="transactionManager" ref="transactionManager"/>
        <!--#2.2目标类-->
        <property name="target" ref="accountService"/>
        <!--#2.3提供接口-->
        <property name="proxyInterfaces" value="Spring事务管理.AccountService"/>
        <!--#2.4事务的详情配置,给TransactionDefintion进行赋值-->
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED,ISOLATION_REPEATABLE_READ</prop>
            </props>
        </property>
    </bean>
</beans>