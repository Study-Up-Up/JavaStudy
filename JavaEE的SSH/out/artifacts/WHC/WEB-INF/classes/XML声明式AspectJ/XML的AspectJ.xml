<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--1.目标类-->
    <bean id="userDao" class="cn.itcast.JDK动态代理.UserDaoImpl"></bean>
    <!--2.切面-->
    <bean id="myAspect" class="XML声明式AspectJ.MyAspect"></bean>
    <!--3.aop编程-->
    <aop:config>
        <aop:aspect ref="myAspect">
            <!--3.1配置切入点，通知最后增强哪些方法-->
            <aop:pointcut expression="execution(* cn.itcast.JDK动态代理.UserDao*.*(..))" id="myPointCut"/>
            <!--3.2关联通知Advice和切入点pointCut-->
            <!--#1前置通知-->
            <aop:before method="myBefore" pointcut-ref="myPointCut"/>
            <!--#2后置通知,在方法返回之前的第二个参数的名称,类型是Object-->
            <aop:after-returning method="myAfterReturning" pointcut-ref="myPointCut" returning="returnVal"/>
            <!--#3环绕通知-->
            <aop:around method="myAround" pointcut-ref="myPointCut"/>
            <!--#4抛出通知:用于处理程序发生异常，就可以接受当前方法产生的异常-->
            <!--注意如果没有异常，将不会增强-->
            <!--throwing属性:用于设置通知第二个参数的名称,类型Throwable-->
            <aop:after-throwing method="myAfterThrowing" pointcut-ref="myPointCut" throwing="throwable"/>
            <!--#5最终通知:无论程序发生什么事情，都将执行-->
            <aop:after method="myAfter" pointcut-ref="myPointCut"/>
        </aop:aspect>
    </aop:config>

</beans>